/* --- Step 4.1: Automatic dark mode --- */

/* Opt in to light & dark; form controls, scrollbars, etc. adapt too */
html {
  color-scheme: light dark;
}

/* Use system colors so they flip with the scheme */
body {
  background: Canvas;
  /* auto: white in light, near-black in dark */
  color: CanvasText;
  /* auto: black in light, white in dark */
}

/* Make your existing variables adaptive (replace your current values) */
:root {
  --color-accent: oklch(65% 50% 0);
  /* tweak later if you want */
  --color-border: color-mix(in oklch, CanvasText 20%, Canvas);
  /* subtle hairline */
  --color-muted: color-mix(in oklch, CanvasText 60%, Canvas);
  /* muted text */
}

/* Optional: nudge accent brighter in dark mode for contrast */
@media (prefers-color-scheme: dark) {
  :root {
    --color-accent: oklch(75% 50% 20);
  }
}




/* ===== Base & variables ===== */
*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  --color-accent: oklch(65% 50% 0);
  --color-border: oklch(80% 3% 200);
  /* cool gray */
  --color-muted: oklch(45% 0.03 200);
}

html {
  accent-color: var(--color-accent);
}

body {
  margin: 0;
  max-width: 75ch;
  margin-inline: auto;
  padding-inline: 1rem;
  font: 100%/1.5 system-ui;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
  margin-block: 1rem;
}

@media (min-width:40rem) {
  body {
    padding-inline: clamp(1rem, 4vw, 2rem);
  }
}

/* ===== Typography / hierarchy ===== */
:where(h1, h2, h3, h4, h5, h6) {
  line-height: 1.1;
  text-wrap: balance;
  margin-block: .6em .4em;
}

h1 {
  font-size: clamp(2rem, 6vw, 4rem);
  /* â‰ˆ400% goal */
  margin-block: .5em .6em;
}

h2 {
  font-size: clamp(1.25rem, 3vw, 1.6rem);
}

/* ===== Navigation ===== */
.menu ul,
.menu li {
  display: contents;
}

/* make <a> the flex children */

.menu {
  display: flex;
  gap: .5rem;
  padding: .25rem 0;
  margin-bottom: 1rem;
  border-bottom: 1px solid var(--color-border);
}

.menu a {
  flex: 1;
  display: block;
  color: inherit;
  text-align: center;
  text-decoration: none;
  padding: .5em;

  --underline-thickness: .4em;
  border-bottom: 0 solid transparent;
  transition: border-color 120ms, border-width 120ms, padding-bottom 120ms;
}

.menu a.current,
.menu a[aria-current="page"] {
  border-bottom-color: var(--color-border);
  border-bottom-width: var(--underline-thickness);
  padding-bottom: calc(.5em - var(--underline-thickness));
  font-weight: 600;
}

.menu a:hover,
.menu a:focus-visible {
  border-bottom-color: var(--color-accent);
  border-bottom-width: var(--underline-thickness);
  padding-bottom: calc(.5em - var(--underline-thickness));
  outline: none;
}

/* ===== Contact form ===== */
input,
textarea,
select,
button {
  font: inherit;
}

.contact-form {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 1em 1rem;
  align-items: start;
}

.contact-form label {
  display: grid;
  grid-template-columns: subgrid;
  grid-column: 1 / -1;
  gap: .5rem 1rem;
}

.contact-form label> :is(input, textarea, select) {
  grid-column: 2;
  width: 100%;
  padding: .6em .8em;
  border: 1px solid var(--color-border);
  border-radius: .5rem;
  background: Canvas;
  color: CanvasText;
}

.contact-form label>span {
  grid-column: 1;
  align-self: center;
}

.contact-form textarea {
  min-block-size: 8rem;
  resize: vertical;
}

.contact-form button {
  grid-column: 1 / -1;
  justify-self: start;
  padding: .6em 1em;
  border-radius: .5rem;
  border: 1px solid var(--color-border);
  background: var(--color-accent);
  color: #fff;
  cursor: pointer;
}

.contact-form :is(input, textarea, select):focus-visible {
  outline: 3px solid var(--color-accent);
  outline-offset: 2px;
  border-color: var(--color-accent);
}

/* Fallback if subgrid columns unsupported */
@supports not (grid-template-columns: subgrid) {
  .contact-form label {
    display: contents;
  }
}

/* ===== Projects grid ===== */
.projects {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(15em, 1fr));
  gap: 1em;
  align-items: start;
  grid-auto-rows: max-content;
}

.projects>article {
  display: grid;
  grid-template-rows: subgrid;
  /* align rows across columns */
  grid-row: span 3;
}

.projects>article>h2 {
  grid-row: 1;
  margin: 0;
}

.projects>article>img {
  grid-row: 2;
  width: 100%;
  height: auto;
  display: block;
}

.projects>article>p {
  grid-row: 3;
  margin-block: .5em 0;
}

/* Fallback if subgrid rows unsupported */
@supports not (grid-template-rows: subgrid) {
  .projects>article {
    display: contents;
  }
}

/* ===== CV (Profile) page ===== */
.cv-header {
  text-align: center;
  margin-block: .25rem 1.25rem;
}

.cv-header p {
  margin: 0;
  font-size: 1.1rem;
  color: var(--color-muted);
}

.cv section {
  margin-block: 1.5rem;
}

.cv h2 {
  border-bottom: 1px solid var(--color-border);
  padding-bottom: .25rem;
  margin-bottom: .75rem;
}

.cv address {
  font-style: normal;
  display: flex;
  flex-wrap: wrap;
  gap: .5rem 1rem;
  align-items: center;
}

.cv address a {
  color: inherit;
  text-decoration: none;
  border-bottom: 1px solid var(--color-border);
}

.cv address a:hover,
.cv address a:focus-visible {
  border-bottom-color: var(--color-accent);
  outline: none;
}

.role {
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: baseline;
  gap: .25rem 1rem;
  margin-top: .75rem;
}

.role h3 {
  margin: 0;
  font-weight: 600;
}

.role .meta {
  color: var(--color-muted);
  white-space: nowrap;
  font-variant-numeric: tabular-nums;
}

.cv ul {
  margin: .35rem 0 1rem;
  padding-inline-start: 1.25em;
}

.cv li {
  margin-block: .25rem;
}

/* ===== Print ===== */
@media print {
  .menu {
    display: none;
  }

  body {
    max-width: none;
    padding: 0;
  }

  @page {
    margin: 1in;
  }

  .cv section {
    break-inside: avoid;
  }

  a[href^="http"]::after {
    content: " (" attr(href) ")";
    font-size: .9em;
  }
}

/* Top-right theme switch */
.color-scheme {
  position: absolute;
  top: 1rem;
  right: 1rem;
  font-size: .85rem;
  color: inherit;
  background: Canvas;
  color: CanvasText;
  border: 1px solid var(--color-border);
  border-radius: .5rem;
  padding: .25rem .5rem;
  display: inline-flex;
  align-items: center;
  gap: .5rem;
}

.color-scheme select {
  font: inherit;
  /* you already set this site-wide, but safe here */
  background: Canvas;
  color: CanvasText;
  border: 1px solid var(--color-border);
  border-radius: .35rem;
  padding: .2rem .4rem;
}